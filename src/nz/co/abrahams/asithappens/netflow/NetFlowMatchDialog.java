/*
 * NetFlowMatchDialog.java
 *
 * Created on 24 November 2005, 04:40
 *
 * AsItHappens - real-time network monitor
 * Copyright (C) 2006  Mark Abrahams
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 */

package nz.co.abrahams.asithappens.netflow;

import nz.co.abrahams.asithappens.core.InvalidInputException;
import nz.co.abrahams.asithappens.uiutil.ErrorHandler;

/**
 * Dialog that allows the selection of NetFlow match criteria.
 *
 * @author  mark
 */
public class NetFlowMatchDialog extends javax.swing.JDialog {
    
    /** The underlying criteria to modify */
    private NetFlowMatchCriteria criteria;
    
    /**
     * Creates new NetFlowMatchDialog.
     *
     * @param criteria  the match criteria to modify
     */
    public NetFlowMatchDialog(NetFlowMatchCriteria criteria) {
        this.criteria = criteria;
        initComponents();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        criteriaPanel = new NetFlowMatchPanel(criteria);
        okButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        resetButton = new javax.swing.JButton();

        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Specify Flow Match Criteria");
        getContentPane().add(criteriaPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        okButton.setText("OK");
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });

        getContentPane().add(okButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 270, 80, -1));

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        getContentPane().add(cancelButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 270, 80, -1));

        resetButton.setText("Reset");
        resetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetButtonActionPerformed(evt);
            }
        });

        getContentPane().add(resetButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 270, 80, -1));

        pack();
    }//GEN-END:initComponents

    /** Clears all fields in the dialog. */
    private void resetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetButtonActionPerformed
        ((NetFlowMatchPanel)criteriaPanel).clearAll();
    }//GEN-LAST:event_resetButtonActionPerformed
    
    /** Disposes of dialog window. */
    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        dispose();
    }//GEN-LAST:event_cancelButtonActionPerformed
    
    /** Stores the match criteria according to the current GUI components. */
    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
        try {
            ((NetFlowMatchPanel)criteriaPanel).saveCriteria();
            dispose();
        } catch (InvalidInputException e) {
            ErrorHandler.modalError(this, e.getMessage(), "Cannot interpret criteria");
        }        
    }//GEN-LAST:event_okButtonActionPerformed
    
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelButton;
    private javax.swing.JPanel criteriaPanel;
    private javax.swing.JButton okButton;
    private javax.swing.JButton resetButton;
    // End of variables declaration//GEN-END:variables
    
}
