/*
 * OIDTemplateDialog.java
 *
 * Created on 6 June 2008, 17:25
 */

package nz.co.abrahams.asithappens.oid;

import nz.co.abrahams.asithappens.core.DBException;
import nz.co.abrahams.asithappens.uiutil.ErrorHandler;
import javax.swing.*;
import javax.swing.table.*;
import java.awt.*;

/**
 *
 * @author  mark
 */
public class CustomOIDDialog extends JDialog {
    
    /** Minimum window size */
    protected static final Dimension MINIMUM_SIZE = new Dimension(700, 400);
    
    /** SNMP type combo items */
    protected static final String[] oidTypes = { "Integer32", "Gauge32", "Counter32", "Counter64" };
    
    /** Set display types */
    protected static final String[] displayTypes = { "Fill", "Line" };
    
    /** The name of the current template being edited */
    protected String templateName;
    
    /** The OID editing table */
    protected JTable oidTable;
    
    /** Creates new form OIDTemplateDialog */
    public CustomOIDDialog(Frame parent, String templateName) {
        super(parent, true);
        this.templateName = templateName;
        
        setMinimumSize(MINIMUM_SIZE);
        setPreferredSize(MINIMUM_SIZE);
        initComponents();
        initializeTable();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        nameLabel = new javax.swing.JLabel();
        nameField = new javax.swing.JTextField();
        positioningLabel = new javax.swing.JLabel();
        positioningCombo = new javax.swing.JComboBox();
        unitsLabel = new javax.swing.JLabel();
        unitsField = new javax.swing.JTextField();
        editPane = new javax.swing.JScrollPane();
        addButton = new javax.swing.JButton();
        removeButton = new javax.swing.JButton();
        okButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Custom OID templates");
        setMinimumSize(new java.awt.Dimension(640, 400));
        getContentPane().setLayout(new java.awt.GridBagLayout());

        nameLabel.setText("Template Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(20, 20, 0, 0);
        getContentPane().add(nameLabel, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 406;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(20, 8, 0, 0);
        getContentPane().add(nameField, gridBagConstraints);

        positioningLabel.setText("Set positioning");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(21, 20, 0, 0);
        getContentPane().add(positioningLabel, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.ipadx = 132;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(21, 8, 0, 0);
        getContentPane().add(positioningCombo, gridBagConstraints);

        unitsLabel.setText("Y axis units");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(21, 20, 0, 0);
        getContentPane().add(unitsLabel, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 8;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 86;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(21, 0, 0, 0);
        getContentPane().add(unitsField, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 9;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 498;
        gridBagConstraints.ipady = 168;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(16, 20, 0, 0);
        getContentPane().add(editPane, gridBagConstraints);

        addButton.setText("<html><center>Add</center><center>OID</center></html>");
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 9;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.ipadx = 21;
        gridBagConstraints.ipady = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(16, 30, 0, 24);
        getContentPane().add(addButton, gridBagConstraints);

        removeButton.setText("<html><center>Remove</center><center>OID</center></html>");
        removeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 9;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.ipadx = -3;
        gridBagConstraints.ipady = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(30, 30, 0, 24);
        getContentPane().add(removeButton, gridBagConstraints);

        okButton.setText("OK");
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.ipadx = 37;
        gridBagConstraints.ipady = 15;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(20, 110, 13, 0);
        getContentPane().add(okButton, gridBagConstraints);

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.ipadx = 15;
        gridBagConstraints.ipady = 15;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(20, 30, 13, 0);
        getContentPane().add(cancelButton, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        dispose();
    }//GEN-LAST:event_cancelButtonActionPerformed
    
    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
        /*
        try {
            store();
            dispose();
        } catch ( DBException e ) {
            ErrorHandler.modalError(null, "Please ensure that database is running and accessible",
                    "Error accessing database", e);
        }
         */
    }//GEN-LAST:event_okButtonActionPerformed
    
    private void removeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeButtonActionPerformed
        if ( oidTable.getSelectedRowCount() == 1 )
            ((CustomOIDTableModel)oidTable.getModel()).removeOID(oidTable.getSelectedRow());
    }//GEN-LAST:event_removeButtonActionPerformed
    
    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        ((CustomOIDTableModel)oidTable.getModel()).addOID();
    }//GEN-LAST:event_addButtonActionPerformed
    
    public void initializeTable() {
        JComboBox typeCombo;
        JComboBox setDisplayCombo;
        
        /*
        try {
            for ( SetDisplay.Positioning positioning : SetDisplay.Positioning.values() )
                positioningCombo.addItem(positioning.toString());
            
            if ( templateName == null ) {
                oidTable = new JTable(new CustomOIDTableModel());
            } else {
                load();
            }
            oidTable.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
            editPane.setViewportView((Component)oidTable);
            
            typeCombo = new JComboBox();
            //for ( int i = 0 ; i < oidTypes.length ; i++ )
            //    typeCombo.addItem(oidTypes[i]);
            for ( SNMPType type : SNMPType.values() )
                typeCombo.addItem(type.toString());
            oidTable.getColumnModel().getColumn(CustomOIDTableModel.Columns.Type.ordinal()).setCellEditor(new DefaultCellEditor(typeCombo));
            oidTable.getColumnModel().getColumn(CustomOIDTableModel.Columns.Type.ordinal()).setCellRenderer(new DefaultTableCellRenderer() {
                public void setValue(Object value) {
                    setText((value == null) ? "" : ((SNMPType)value).label);
                }
            });
            
            setDisplayCombo = new JComboBox();
            for ( SetDisplay.Style type : SetDisplay.Style.values() )
                setDisplayCombo.addItem(type.toString());
            oidTable.getColumnModel().getColumn(CustomOIDTableModel.Columns.Style.ordinal()).setCellEditor(new DefaultCellEditor(setDisplayCombo));
            oidTable.getColumnModel().getColumn(CustomOIDTableModel.Columns.Style.ordinal()).setCellRenderer(new DefaultTableCellRenderer() {
                public void setValue(Object value) {
                    //setText( (value == null) ? "" : displayTypes[((Integer)value).intValue()] );
                    setText( (value == null) ? "" : ((SetDisplay.Style)value).toString() );
                }
            });
            
            oidTable.getColumnModel().getColumn(CustomOIDTableModel.Columns.Color.ordinal()).setCellEditor(new ColorCellEditor());
            oidTable.getColumnModel().getColumn(CustomOIDTableModel.Columns.Color.ordinal()).setCellRenderer(new ColorCellRenderer());
            
            oidTable.getColumnModel().getColumn(CustomOIDTableModel.Columns.Label.ordinal()).setPreferredWidth(140);
            oidTable.getColumnModel().getColumn(CustomOIDTableModel.Columns.OID.ordinal()).setPreferredWidth(220);
            oidTable.getColumnModel().getColumn(CustomOIDTableModel.Columns.Type.ordinal()).setPreferredWidth(120);
            oidTable.getColumnModel().getColumn(CustomOIDTableModel.Columns.Description.ordinal()).setPreferredWidth(220);
            oidTable.getColumnModel().getColumn(CustomOIDTableModel.Columns.Style.ordinal()).setPreferredWidth(60);
            oidTable.getColumnModel().getColumn(CustomOIDTableModel.Columns.Color.ordinal()).setPreferredWidth(60);
        } catch ( DatabaseException e ) {
            ErrorHandler.modalError(null, "Please ensure that database is running and accessible",
                    "Error accessing database", e);
        }
        */
    }
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private javax.swing.JButton cancelButton;
    private javax.swing.JScrollPane editPane;
    private javax.swing.JTextField nameField;
    private javax.swing.JLabel nameLabel;
    private javax.swing.JButton okButton;
    private javax.swing.JComboBox positioningCombo;
    private javax.swing.JLabel positioningLabel;
    private javax.swing.JButton removeButton;
    private javax.swing.JTextField unitsField;
    private javax.swing.JLabel unitsLabel;
    // End of variables declaration//GEN-END:variables
    
}
