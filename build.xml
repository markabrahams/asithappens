<?xml version="1.0"?>

<project name="asithappens" default="build" basedir=".">

    <property name="src" value="src" />
    <property name="build" value="build" />
    <property name="dist" value="dist" />
    <property name="lib" value="lib" />
    <property name="testsrc" value="test/src" />
    <property name="testbuild" value="build/test" />
    <property name="testreports" value="test/reports" />
    <!-- <property name="targetjvm" value="/usr/lib/jvm/java-6-openjdk/jre/bin/java" /> -->
    <property name="targetjvm" value="/opt/jre1.6.0_18/bin/java" />
    <property name="targetversion" value="1.5" />
    <property name="junit.jar" value="lib/junit-4.8.1.jar" />
    <property name="appjar" value="asithappens.jar" />
    <property name="packagename" value="nz.co.abrahams.asithappens" />
    <property name="javadocdst" value="javadoc" />
    <property name="runclass" value="nz.co.abrahams.asithappens.mainui.AsItHappens" />
    <property name="applicationproperties" value="asithappens.properties" />
    <property name="log4jproperties" value="log4j.properties" />

    <path id="classpath.common">
        <!--
        <pathelement path="${classpath}" />
        -->
        <fileset dir="${lib}">
            <include name="**/*.jar" />
        </fileset>
        <pathelement path="${dist}/${appjar}" />
    </path>
    
    <path id="classpath.test">
       <path refid="classpath.common"/>
       <pathelement path="${testbuild}" />
       <pathelement location="${junit.jar}"/>
    </path>    
    
    <target name="init">
        <mkdir dir="${build}" />
        <mkdir dir="${dist}" />
    </target>

    <target name="build" depends="init" description="Compile Java classes">
        <javac srcdir="${src}" destdir="${build}" deprecation="on" debug="true" debuglevel="lines,vars,source" target="${targetversion}" includeantruntime="false">
            <!--> <compilerarg line="-Xlint:deprecation -Xlint:unchecked"/> <-->
            <classpath refid="classpath.common" />
        </javac>
        <!--
        <jar destfile="${dist}/asithappens.jar" basedir="${build}"/>
        -->
        <jar destfile="${dist}/asithappens.jar">
            <fileset dir="${build}" />
            <fileset file="${applicationproperties}" />
            <fileset file="${log4jproperties}" />
        </jar>
    </target>
        
    <target name="clean" description="Destroy all generated files and dirs">
        <delete dir="${build}"/>
        <delete dir="${dist}"/>
    </target>

    <target name="run" description="Run application">
        <java fork="true" classname="${runclass}" jvm="${targetjvm}">
            <classpath refid="classpath.common" />
        </java>
    </target>
    
    <target name="buildtests" depends="build">
        <mkdir dir="${testbuild}"/>
        <javac srcdir="${testsrc}" destdir="${testbuild}" debug="true" debuglevel="lines,vars,source" target="${targetversion}">
            <compilerarg line="-Xlint:deprecation"/>
            <classpath refid="classpath.test" />
            <!--
            <classpath>
                <pathelement location="build/lib/${app.name}.jar" />
                <pathelement path="" />
            </classpath>
            -->
            <include name="**/*.java"/>
        </javac>
    </target>

    <target name="test" depends="buildtests">
        <java fork="yes" classname="junit.swingui.TestRunner" 
            taskname="junit" failonerror="true">
            <arg value="nz.co.abrahams.asithappens.AllTests"/>
            <classpath refid="classpath.test" />
            <!--
            <classpath>
                <pathelement location="build/lib/${app.name}.jar" />
                <pathelement location="build/testcases" />
                <pathelement path="" />
                <pathelement path="${java.class.path}" />
            </classpath>
            -->
        </java>
    </target>
    
    
    <target name="testconsole" depends="buildtests">
        <junit printsummary="yes" fork="yes" forkmode="once" haltonfailure="yes" dir=".">
            <classpath refid="classpath.test" />

            <formatter type="plain"/>

            <batchtest fork="yes" todir="${testreports}">
                <fileset dir="${testsrc}">
                    <include name="**/*Test*.java"/>
                    <exclude name="**/DataSetsTest.java"/>
                    <!--> <exclude name="**/DatabaseCreateTest.java"/> <-->
                    <exclude name="**/TestEnvironment.java"/>
                    <exclude name="**/AllTests.java"/>
                </fileset>
            </batchtest>
        </junit>
    </target>
    
    <target name="javadoc">
        <javadoc packagenames="${packagename}"
                 sourcepath="${src}"
                 destdir="${javadocdst}"
                 target="${targetversion}">
            <classpath refid="classpath.common" />
        </javadoc>
    </target>
    
    
    <target name="debug" depends="build" description="Debug Project">
        <fail unless="netbeans.home">This target can only run inside the NetBeans IDE.</fail>
        <nbjpdastart name="AsItHappens" addressproperty="jpda.address" transport="dt_socket">
            <classpath refid="classpath.common" />
            <!-- Optional - If source roots are properly declared in project, should
                            work without setting source path.     
            <sourcepath path="debug.sourcepath"/> -->
        </nbjpdastart>
        <java fork="true" classname="${runclass}" jvm="${targetjvm}">
            <jvmarg value="-Xdebug"/>
            <jvmarg value="-Xnoagent"/>
            <jvmarg value="-Djava.compiler=none"/>
            <jvmarg value="-Dcom.sun.management.jmxremote"/>
            <jvmarg value="-Xrunjdwp:transport=dt_socket,address=${jpda.address}"/>
            <classpath refid="classpath.common"/>
        </java>
    </target>        

    <target name="profile" depends="build" description="Profile Project">
        <fail unless="netbeans.home">This target can only run inside the NetBeans IDE.</fail>
        <nbprofiledirect name="AsItHappens" addressproperty="jpda.address" transport="dt_socket">
            <classpath refid="classpath.common" />
        </nbprofiledirect>
        <java fork="true" classname="${runclass}" jvm="${targetjvm}">
            <jvmarg value="${profiler.info.jvmargs.agent}"/>
            <classpath refid="classpath.common"/>
        </java>
    </target>        

</project>